global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# Setup a haproxy table to store connection information for each user IP adress
# We'll use it in each challenge that needs autoban to limit no of connections and
# the connection rate for users
backend ip_blacklist
    stick-table type ip size 1m expire 2m store gpc0


# Stats listener

listen stats
    bind *:8080
    mode http
    stats enable
    stats uri /
    stats auth admin:9IIZHx53FATnUtJVTVcc

# DNS resolver to retrieve backends dynamically ##

resolvers nameservers
    nameserver ns 127.0.0.1:53
    accepted_payload_size 8192

    hold nx       3s
    hold timeout  3s

    timeout retry 1s
    timeout resolve 1s

    resolve_retries 3


# HTTP frontends

defaults
  mode http
  default_backend be_redirect_to_ctfd
  timeout connect 20000
  timeout client  120000
  timeout server  120000
  log global
  option httplog
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend http
  # Reject connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:80
  use_backend %[req.hdr(host),lower,map_dom(/etc/haproxy/maps/http-hosts.map)]

# TCP frontends

defaults
  mode tcp
  default_backend be_default
  timeout connect 20000
  timeout client  120000
  timeout server  120000

frontend eddy
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1000
  use_backend be_eddy
frontend kevin-higgs-the-revenge
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1300
  use_backend be_kevin-higgs-the-revenge
frontend counter
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1402
  use_backend be_counter
frontend yanc
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1406
  use_backend be_yanc
frontend notes-keeper
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1405
  use_backend be_notes-keeper
frontend exorcist
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1002
  use_backend be_exorcist
frontend red-diamond
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1303
  use_backend be_red-diamond
frontend encryptor
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }


  bind *:1401
  use_backend be_encryptor
frontend yatodo-bot
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1608
  use_backend be_yatodo-bot
frontend xor
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1400
  use_backend be_xor
frontend faster-python
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1403
  use_backend be_faster-python
frontend py-explorer
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1301
  use_backend be_py-explorer
frontend type-it
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }


  bind *:1302
  use_backend be_type-it
frontend nitro
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1001
  use_backend be_nitro
frontend mind-games
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }

  # Automatic temporary IP ban
  stick-table type ip size 1m expire 30s store conn_rate(30s),conn_cur
  tcp-request connection reject if { src_get_gpc0(ip_blacklist) gt 0 }
  tcp-request connection track-sc0 src
  tcp-request connection track-sc1 src table ip_blacklist
  tcp-request connection sc-inc-gpc0(1) if { sc0_conn_rate gt 50 } or { sc0_conn_cur gt 25 }

  bind *:1404
  use_backend be_mind-games
frontend type-it-2
  # Ban connection if source IP is blacklisted
  tcp-request connection reject if { src -f /etc/haproxy/blacklist.lst }


  bind *:1304
  use_backend be_type-it-2

# HTTP backends

defaults
  mode http
  option prefer-last-server
  balance leastconn
  option httpchk HEAD /
  timeout connect 20000
  timeout client  120000
  timeout server  120000

backend be_netflix-prize
  server-template node 14 gke-nodes.internal:30200 check resolvers nameservers init-addr libc,none
backend be_perfect-model
  server-template node 14 gke-nodes.internal:30603 check resolvers nameservers init-addr libc,none
backend be_cookauth
  server-template node 14 gke-nodes.internal:30602 check resolvers nameservers init-addr libc,none
backend be_validator
  server-template node 14 gke-nodes.internal:30600 check resolvers nameservers init-addr libc,none
backend be_yatodo
  server-template node 14 gke-nodes.internal:30607 check resolvers nameservers init-addr libc,none
backend be_ezphp
  server-template node 14 gke-nodes.internal:30606 check resolvers nameservers init-addr libc,none
backend be_ezphp-fixed
  server-template node 14 gke-nodes.internal:30610 check resolvers nameservers init-addr libc,none
backend be_pipe-your-way
  server-template node 14 gke-nodes.internal:30604 check resolvers nameservers init-addr libc,none
backend be_lay-lowah
  server-template node 14 gke-nodes.internal:30609 check resolvers nameservers init-addr libc,none

backend be_default
  tcp-request content reject

# TCP backends

defaults
  mode tcp
  option tcp-check
  balance roundrobin
  timeout connect 20000
  timeout client  120000
  timeout server  120000

backend be_eddy
  server-template node 14 gke-nodes.internal:30000 check resolvers nameservers init-addr libc,none
backend be_kevin-higgs-the-revenge
  server-template node 14 gke-nodes.internal:30300 check resolvers nameservers init-addr libc,none
backend be_counter
  server-template node 14 gke-nodes.internal:30402 check resolvers nameservers init-addr libc,none
backend be_yanc
  server-template node 14 gke-nodes.internal:30406 check resolvers nameservers init-addr libc,none
backend be_notes-keeper
  server-template node 14 gke-nodes.internal:30405 check resolvers nameservers init-addr libc,none
backend be_exorcist
  server-template node 14 gke-nodes.internal:30002 check resolvers nameservers init-addr libc,none
backend be_red-diamond
  server-template node 14 gke-nodes.internal:30303 check resolvers nameservers init-addr libc,none
backend be_encryptor
  server-template node 14 gke-nodes.internal:30401 check resolvers nameservers init-addr libc,none
backend be_yatodo-bot
  server-template node 14 gke-nodes.internal:30608 check resolvers nameservers init-addr libc,none
backend be_xor
  server-template node 14 gke-nodes.internal:30400 check resolvers nameservers init-addr libc,none
backend be_faster-python
  server-template node 14 gke-nodes.internal:30403 check resolvers nameservers init-addr libc,none
backend be_py-explorer
  server-template node 14 gke-nodes.internal:30301 check resolvers nameservers init-addr libc,none
backend be_type-it
  server-template node 14 gke-nodes.internal:30302 check resolvers nameservers init-addr libc,none
backend be_nitro
  server-template node 14 gke-nodes.internal:30001 check resolvers nameservers init-addr libc,none
backend be_mind-games
  server-template node 14 gke-nodes.internal:30404 check resolvers nameservers init-addr libc,none
backend be_type-it-2
  server-template node 14 gke-nodes.internal:30304 check resolvers nameservers init-addr libc,none

backend be_redirect_to_ctfd
    mode http
    http-request redirect location https://ctf.gdgalgiers.com