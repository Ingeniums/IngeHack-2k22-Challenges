apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    challenge: {{ .Values.deployment.name }}
    category: {{ .Values.category }}
    egress: {{ .Values.deployment.egress }}
    {{- include "ctf-challenge-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicasNumber }}
  selector:
    matchLabels:
      category: {{ .Values.category }}
      challenge: {{ .Values.deployment.name }}
      egress: {{ .Values.deployment.egress }}
      {{- include "ctf-challenge-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.deployment.other.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        category: {{ .Values.category }}
        challenge: {{ .Values.deployment.name }}
        egress: {{ .Values.deployment.egress }}
        {{- include "ctf-challenge-chart.selectorLabels" . | nindent 8 }}
    spec:
      enableServiceLinks: false 
      automountServiceAccountToken: false
      {{ if eq .Values.deployment.type "http"}}
      containers:
        - name: web 
      {{ else if eq .Values.deployment.type "tcp"}}
      containers:
        - name: server
      {{ end }}
          image: "{{ .Values.deployment.dockerRepository }}/{{ .Values.deployment.dockerImage }}"
          {{ if .Values.deployment.containerPort }}
          ports:
            {{if eq .Values.deployment.type "http"}}
            - name: http
            {{ else if eq .Values.deployment.type "tcp"}}
            - name: tcp
            {{ end}}
              containerPort: {{ .Values.deployment.containerPort}}
          livenessProbe:
            {{ if eq .Values.deployment.type "http" }}
            httpGet:
              path: /
              port: http
            {{ else if eq .Values.deployment.type "tcp" }}
            tcpSocket:
              port: tcp
            {{ end }}
            initialDelaySeconds: {{ .Values.deployment.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.healthCheck.periodSeconds }}
          {{ end }}
          resources:
            limits:
              cpu: {{ .Values.deployment.limits.cpu}}
              memory: {{ .Values.deployment.limits.memory }}
            requests:
              cpu: {{ .Values.deployment.requests.cpu }}
              memory: {{ .Values.deployment.requests.memory }}

        {{ if .Values.deployment.additionalContainers }}
        {{- range .Values.deployment.additionalContainers}}
        - name: {{ .name }}
          image: "{{ .dockerRepository }}/{{.dockerImage }}" 
          {{ if .containerPort }}
          ports:
            {{if eq .type "http"}}
            - name: http
            {{ else if eq .type "tcp"}}
            - name: tcp
            {{ end}}
              containerPort: {{ .containerPort}}
          livenessProbe:
            {{ if eq .type "http" }}
            httpGet:
              path: /
              port: http
            {{ else if eq .type "tcp" }}
            tcpSocket:
              port: tcp
            {{ end }}
            initialDelaySeconds: {{ .healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .healthCheck.periodSeconds }}
          {{ end }}
          resources:
            limits:
              cpu: {{ .resources.limits.cpu}}
              memory: {{ .resources.limits.memory }}
            requests:
              cpu: {{ .resources.requests.cpu }}
              memory: {{ .resources.requests.memory }}
       {{- end }}
       {{ end }}
